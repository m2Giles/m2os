FROM alpine:edge

ARG USERNAME="m2os"
ENV USERNAME="$USERNAME"
ENV SET_X=1

RUN <<CONTAINEREOF
# Compat
mkdir -p /usr/local/bin
ln -sf /bin/bash /usr/bin/bash
mkdir /etc/skel/
(cd /etc/skel; ln -s .bashrc .bash_profile)
CONTAINEREOF

RUN <<CONTAINEREOF
# Install Tools
apk add --no-cache \
    bash \
    cosign \
    curl \
    fd \
    github-cli \
    jq \
    just \
    ncurses \
    ncurses-terminfo \
    npm \
    ripgrep \
    sbsigntool \
    shellcheck \
    shadow \
    shfmt \
    skopeo \
    socat \
    syft \
    tar \
    tmux \
    yamlfmt \
    yamllint \
    zstd

npm install -g \
    neo-bash-ls \
    pyright \
    tldr \
    vscode-langservers-extracted \

# Not working with remote lsp
    # dockerfile-language-server-nodejs \
    # yaml-language-server

# dockerfmt
while [[ -z "${DOCKER_FMT:-}" || "${DOCKER_FMT:-}" == "null" ]]; do
    DOCKER_FMT="$(curl -L https://api.github.com/repos/reteps/dockerfmt/releases/latest | jq -r '.assets[] | select(.name| test(".*linux-amd64.*gz$")).browser_download_url')" || (true && sleep 5)
done
curl --retry 3 -Lq "$DOCKER_FMT" | tar -xz -C /usr/bin/
ln -sf /usr/bin/dockerfmt /usr/bin/dockfmt

# Emacs LSP Booster
while [[ -z "${EMACS_LSP_BOOSTER:-}" || "${EMACS_LSP_BOOSTER:-}" == "null" ]]; do
    EMACS_LSP_BOOSTER="$(curl -L https://api.github.com/repos/blahgeek/emacs-lsp-booster/releases/latest | jq -r '.assets[] | select(.name| test(".*musl[.]zip$")).browser_download_url')" || (true && sleep 5)
done
curl --retry 3 -Lqo /tmp/emacs-lsp-booster.zip "$EMACS_LSP_BOOSTER"
unzip -d /usr/bin/ /tmp/emacs-lsp-booster.zip
CONTAINEREOF
