ARG BASE_IMAGE="ghcr.io/ublue-os/bluefin"
ARG TAG_VERSION="stable-daily"

#if !defined(SERVER) && !defined(BAZZITE)
FROM AKMODS AS akmods
#endif /* !defined(SERVER) && !defined(BAZZITE) */

#ifdef ZFS
FROM ZFS AS zfs
#endif /* ZFS */

#ifdef NVIDIA
FROM NVIDIA AS nvidia
#endif /* NVIDIA */

FROM ${BASE_IMAGE}:${TAG_VERSION}

ARG IMAGE="bluefin"
ARG VERSION=""
#ifdef GHCI
ARG CI="1"
#endif /* GHCI */

RUN --mount=type=cache,dst=/var/cache \
    --mount=type=tmpfs,dst=/var/log \
    --mount=type=tmpfs,dst=/tmp \
    --mount=type=bind,src=build_files/remove-cliwrap.sh,dst=/ctx/remove-cliwrap.sh \
    ["/ctx/remove-cliwrap.sh"]

RUN --mount=type=cache,dst=/var/cache \
    --mount=type=tmpfs,dst=/var/log \
    --mount=type=tmpfs,dst=/tmp \
    --mount=type=bind,src=build_files/distrobox.sh,dst=/ctx/distrobox.sh \
    ["/ctx/distrobox.sh"]

RUN --mount=type=cache,dst=/var/cache \
    --mount=type=tmpfs,dst=/var/log \
    --mount=type=tmpfs,dst=/tmp \
    --mount=type=bind,src=build_files/branding.sh,dst=/ctx/branding.sh \
    ["/ctx/branding.sh"]

RUN --mount=type=cache,dst=/var/cache \
    --mount=type=tmpfs,dst=/var/log \
    --mount=type=tmpfs,dst=/tmp \
    --mount=type=bind,src=build_files/signing.sh,dst=/ctx/signing.sh \
    --mount=type=bind,src=cosign.pub,dst=/ctx/cosign.pub \
    --mount=type=bind,src=cosign-backup.pub,dst=/ctx/cosign-backup.pub \
    ["/ctx/signing.sh"]

RUN --mount=type=cache,dst=/var/cache \
    --mount=type=tmpfs,dst=/var/log \
    --mount=type=tmpfs,dst=/tmp \
    --mount=type=bind,src=build_files/composefs.sh,dst=/ctx/composefs.sh \
    ["/ctx/composefs.sh"]

RUN --mount=type=cache,dst=/var/cache \
    --mount=type=tmpfs,dst=/var/log \
    --mount=type=tmpfs,dst=/tmp \
    --mount=type=bind,src=build_files/server-packages.sh,dst=/ctx/server-packages.sh \
    ["/ctx/server-packages.sh"]

#ifdef ZFS
RUN --mount=type=cache,dst=/var/cache \
    --mount=type=tmpfs,dst=/var/log \
    --mount=type=tmpfs,dst=/tmp \
    --mount=type=bind,from=akmods,src=/kernel-rpms,dst=/tmp/kernel-rpms \
    --mount=type=bind,from=akmods,src=/rpms,dst=/tmp/rpms \
    --mount=type=bind,src=build_files/kernel-swap.sh,dst=/ctx/kernel-swap.sh \
    ["/ctx/kernel-swap.sh"]

#ifdef NVIDIA
RUN --mount=type=cache,dst=/var/cache \
    --mount=type=tmpfs,dst=/var/log \
    --mount=type=tmpfs,dst=/tmp \
    --mount=type=bind,from=nvidia,src=/rpms,dst=/tmp/akmods-rpms \
    --mount=type=bind,src=build_files/install-nvidia.sh,dst=/ctx/install-nvidia.sh \
    ["/ctx/install-nvidia.sh"]
#endif /* NVIDIA */

RUN --mount=type=cache,dst=/var/cache \
    --mount=type=tmpfs,dst=/var/log \
    --mount=type=tmpfs,dst=/tmp \
    --mount=type=bind,from=zfs,src=/rpms,dst=/tmp/rpms \
    --mount=type=bind,src=build_files/install-zfs.sh,dst=/ctx/install-zfs.sh \
    ["/ctx/install-zfs.sh"]
#endif /* ZFS */

#ifdef COSMIC
RUN --mount=type=cache,dst=/var/cache \
    --mount=type=tmpfs,dst=/var/log \
    --mount=type=tmpfs,dst=/tmp \
    --mount=type=bind,src=build_files/cosmic.sh,dst=/ctx/cosmic.sh \
    ["/ctx/cosmic.sh"]
#endif /* COSMIC */

#ifndef SERVER
RUN --mount=type=cache,dst=/var/cache \
    --mount=type=tmpfs,dst=/var/log \
    --mount=type=tmpfs,dst=/tmp \
    --mount=type=bind,src=build_files/desktop-packages.sh,dst=/ctx/desktop-packages.sh \
    ["/ctx/desktop-packages.sh"]

RUN --mount=type=cache,dst=/var/cache \
    --mount=type=tmpfs,dst=/var/log \
    --mount=type=tmpfs,dst=/tmp \
    --mount=type=bind,src=build_files/desktop-defaults.sh,dst=/ctx/desktop-defaults.sh \
    ["/ctx/desktop-defaults.sh"]

RUN --mount=type=cache,dst=/var/cache \
    --mount=type=tmpfs,dst=/var/log \
    --mount=type=tmpfs,dst=/tmp \
    --mount=type=bind,src=build_files/flatpak.sh,dst=/ctx/flatpak.sh \
    ["/ctx/flatpak.sh"]
#endif /* SERVER */

#if !defined(BAZZITE) && !defined(SERVER)
RUN --mount=type=cache,dst=/var/cache \
    --mount=type=tmpfs,dst=/var/log \
    --mount=type=tmpfs,dst=/tmp \
    --mount=type=bind,src=build_files/steam.sh,dst=/ctx/steam.sh \
    ["/ctx/steam.sh"]
#endif /* !defined(BAZZITE) && !defined(SERVER) */

#if !defined(SERVER) && !defined(ZFS) && !defined(BAZZITE)
RUN --mount=type=cache,dst=/var/cache \
    --mount=type=tmpfs,dst=/var/log \
    --mount=type=tmpfs,dst=/tmp \
    --mount=type=bind,from=akmods,src=/rpms,dst=/tmp/rpms \
    --mount=type=bind,src=build_files/vfio.sh,dst=/ctx/vfio.sh \
    dnf5 -y copr enable hikariknight/looking-glass-kvmfr && \
    dnf5 install -y /tmp/rpms/kmods/kmod-kvmfr*.rpm && \
    /ctx/vfio.sh
#elif defined(BAZZITE) || defined(ZFS)
RUN --mount=type=cache,dst=/var/cache \
    --mount=type=tmpfs,dst=/var/log \
    --mount=type=tmpfs,dst=/tmp \
    --mount=type=bind,src=build_files/vfio.sh,dst=/ctx/vfio.sh \
    ["/ctx/vfio.sh"]
#endif /* VFIO */

RUN --mount=type=cache,dst=/var/cache \
    --mount=type=tmpfs,dst=/var/log \
    --mount=type=tmpfs,dst=/tmp \
    --mount=type=bind,src=build_files/initramfs.sh,dst=/ctx/initramfs.sh \
    ["/ctx/initramfs.sh"]

RUN --mount=type=bind,src=build_files/cleanup.sh,dst=/ctx/cleanup.sh \
    ["/ctx/cleanup.sh"]

RUN ["bootc", "container", "lint"]
