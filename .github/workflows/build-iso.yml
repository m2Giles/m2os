---
name: Build m2os ISOs
on: # yamllint disable-line rule:truthy rule:comments
  workflow_dispatch:
    inputs:
      image_flavor:
        description: "The image flavor to build, Make sure it matches"
        type: choice
        options:
          - "Desktop"
          - "Bazzite"
        default: "Desktop"
  workflow_call:
    inputs:
      image_flavor:
        type: string
        required: true
env:
  IMAGE_REGISTRY: ghcr.io/m2giles
  IMAGE_NAME: m2os
concurrency:
  group: >-
    ${{ github.workflow }}-${{ github.ref
    || github.run_id }}-${{ inputs.image_flavor }}-iso
  cancel-in-progress: true
jobs:
  get-images:
    name: Get Images for Build
    outputs:
      images: ${{ steps.images.outputs.images }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        # yamllint disable-line rule:line-length rule:comments
        uses: actions/checkout@v4
      - name: Get Images for Build
        id: images
        uses: ./.github/actions/get-images
        with:
          image_flavor: ${{ inputs.image_flavor }}
  build-iso:
    name: Build ${{ inputs.image_flavor }} ISOs (${{ matrix.image }})
    needs: get-images
    outputs:
      url: ${{ steps.url.outputs.url }}
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write
    strategy:
      fail-fast: false
      matrix:
        image: ["${{ fromJson(needs.get-images.outputs.images) }}"]
    steps:
      - name: Checkout
        # yamllint disable-line rule:line-length rule:comments
        uses: actions/checkout@v4
      - name: Maximize Build Space
        if: >-
          contains(fromJson('["workflow_dispatch", "workflow_call"]'),
          github.event_name) || github.event.schedule == '41 6 * * 0'
        # yamllint disable-line rule:line-length rule:comments
        uses: ublue-os/remove-unwanted-software@v9
      - name: Setup Just
        # yamllint disable-line rule:line-length rule:comments
        uses: extractions/setup-just@e33e0265a09d6d736e2ee1e0eb685ef1de4669ff # v3
      - name: Download OCI-Archive
        # yamllint disable-line rule:line-length rule:comments
        uses: actions/download-artifact@v4
        with:
          name: ${{ matrix.image }}.oci
      - name: Build ISO
        if: >-
          contains(fromJson('["workflow_dispatch", "workflow_call"]'),
          github.event_name) || github.event.schedule == '41 6 * * 0'
        shell: bash
        run: |
          sudo $(which just) build-iso ${{ matrix.image }} 2 1
          tree "./${{ env.IMAGE_NAME }}_build/output/"
      - name: Upload ISOs and Checksum to Job Artifacts
        id: upload
        # yamllint disable-line rule:line-length rule:comments
        uses: actions/upload-artifact@v4
        if: >-
          contains(fromJson('["workflow_dispatch", "workflow_call"]'),
          github.event_name) || github.event.schedule == '41 6 * * 0'
        with:
          name: ${{ matrix.image }}-iso
          path: |
            ./${{ env.IMAGE_NAME }}_build/output/
          if-no-files-found: warn
          retention-days: 0
          compression-level: 0
          overwrite: true
      - name: Make URL Artifact
        shell: bash
        id: url
        run: |
          echo "|[${{ matrix.image }}](${{ env.ARTIFACT-URL }})|" \
            > url-${{ inputs.image_flavor }}-${{ matrix.image }}.txt
        env:
          ARTIFACT-URL: ${{ steps.upload.outputs.artifact-url }}
      - name: Upload ISO URL for Changelogs
        id: upload-url
        # yamllint disable-line rule:line-length rule:comments
        uses: actions/upload-artifact@v4
        with:
          name: url-${{ inputs.image_flavor }}-${{ matrix.image }}
          path: url-${{ inputs.image_flavor }}-${{ matrix.image }}.txt
          if-no-files-found: error
          retention-days: 0
          compression-level: 0
          overwrite: true
