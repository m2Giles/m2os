---
name: Build m2os ISOs
on: # yamllint disable-line rule:truthy rule:comments
  workflow_dispatch:
    inputs:
      image_flavor:
        description: "The image flavor to build, Make sure it matches"
        type: choice
        options:
          - "Desktop"
          - "Bazzite"
          - "Beta-Desktop"
          - "Beta-Bazzite"
        default: "Desktop"
  workflow_call:
    inputs:
      image_flavor:
        type: string
        required: true
env:
  IMAGE_REGISTRY: ghcr.io/m2giles
  IMAGE_NAME: m2os
  SET_X: 1

concurrency:
  group: >-
    ${{ github.workflow }}-${{ github.ref
    || github.run_id }}-${{ inputs.image_flavor }}-iso
  cancel-in-progress: true

jobs:
  get-images:
    name: Get Images for Build
    permissions:
      actions: read
    outputs:
      images: ${{ steps.images.outputs.images }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        # yamllint disable-line rule:line-length rule:comments
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
      - name: Get Images for Build
        id: images
        uses: ./.github/actions/get-images
        with:
          image_flavor: ${{ inputs.image_flavor }}

  build-iso:
    name: ${{ matrix.image }}
    needs: get-images
    outputs:
      url: ${{ steps.url.outputs.url }}
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: read
    strategy:
      fail-fast: false
      matrix:
        image: ["${{ fromJson(needs.get-images.outputs.images) }}"]
    steps:
      - name: Checkout
        # yamllint disable-line rule:line-length rule:comments
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
        with:
          submodules: true
      - name: Maximize Build Space
        # yamllint disable-line rule:line-length rule:comments
        uses: ublue-os/remove-unwanted-software@cc0becac701cf642c8f0a6613bbdaf5dc36b259e # v9

      - name: Setup Just
        # yamllint disable-line rule:line-length rule:comments
        uses: extractions/setup-just@e33e0265a09d6d736e2ee1e0eb685ef1de4669ff # v3

      - name: Build ISO
        shell: bash
        run: |
          just build-iso ${{ matrix.image }}
          tree "./${{ env.IMAGE_NAME }}_build/output/"

      - name: Upload ISOs and Checksum to Job Artifacts
        id: upload
        # yamllint disable-line rule:line-length rule:comments
        uses: actions/upload-artifact@330a01c490aca151604b8cf639adc76d48f6c5d4 # v5
        with:
          name: ${{ matrix.image }}-iso
          path: |
            ./${{ env.IMAGE_NAME }}_build/output/
          if-no-files-found: warn
          retention-days: 0
          compression-level: 0
          overwrite: true

      - name: Make URL Artifact
        shell: bash
        id: url
        run: |
          echo "|[${{ matrix.image }}](${{ env.ARTIFACT-URL }})|" \
            > url-${{ inputs.image_flavor }}-${{ matrix.image }}.txt
        env:
          ARTIFACT-URL: ${{ steps.upload.outputs.artifact-url }}

      - name: Upload ISO URL for Changelogs
        id: upload-url
        # yamllint disable-line rule:line-length rule:comments
        uses: actions/upload-artifact@330a01c490aca151604b8cf639adc76d48f6c5d4 # v5
        with:
          name: url-${{ inputs.image_flavor }}-${{ matrix.image }}
          path: url-${{ inputs.image_flavor }}-${{ matrix.image }}.txt
          if-no-files-found: error
          retention-days: 0
          compression-level: 0
          overwrite: true

  check-iso:
    name: Check all ISOs Created
    if: ${{ !cancelled() }}
    runs-on: ubuntu-latest
    needs: [build-iso]
    permissions:
      actions: read
    steps:
      - name: Exit on failure
        if: >-
          ${{ contains(fromJson('["failure", "skipped"]'),
          needs.build-iso.result) }}
        shell: bash
        run: exit 1
      - name: Exit
        shell: bash
        run: exit 0

  generate-release:
    name: Generate ${{ inputs.image_flavor }} Changelog
    needs: [check-iso]
    permissions:
      contents: read
    runs-on: ubuntu-latest
    steps:
      - name: Checkout last 500 commits (for <commits> to work)
        # yamllint disable-line rule:line-length rule:comments
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
        with:
          fetch-depth: 500

      - name: Download Artifacts
        # yamllint disable-line rule:line-length rule:comments
        uses: actions/download-artifact@018cc2cf5baa6db3ef3c5f8a56943fffe632ef53 # v6
        with:
          pattern: url-${{ inputs.image_flavor }}-*
          merge-multiple: true

      - name: Merge Artifacts into url.md
        id: merge-artifacts
        shell: bash
        run: |
          set -eoux pipefail
          touch url.md
          for artifact in $(find url-${{ inputs.image_flavor }}-*); do
            cat $artifact >> url.md
          done
          echo "urlmd=url.md" >> $GITHUB_OUTPUT

      - name: Generate Release Text
        id: generate-release
        run: |
          set -eoux pipefail
          python3 ./changelogs.py \
            "${{ inputs.image_flavor }}" \
            ./output-${{ inputs.image_flavor }}.env \
            ./changelog-${{ inputs.image_flavor }}.md \
            --workdir . \
            --handwritten "" \
            --urlmd "${{ steps.merge-artifacts.outputs.urlmd }}"
          source ./output-${{ inputs.image_flavor }}.env

      - name: Upload Changelogs as Artifact
        # yamllint disable-line rule:line-length rule:comments
        uses: actions/upload-artifact@330a01c490aca151604b8cf639adc76d48f6c5d4 # v5
        with:
          name: changelogs-${{ inputs.image_flavor }}
          path: ./changelog-${{ inputs.image_flavor }}.md
          if-no-files-found: error
          retention-days: 0
          compression-level: 0
          overwrite: true
