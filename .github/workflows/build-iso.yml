name: Build m2os ISOs
on:
  workflow_dispatch:
    inputs:
      images:
        description: "The images to build"
        type: choice
        options:
          - '["aurora", "aurora-nvidia", "bluefin", "bluefin-nvidia", "cosmic", "cosmic-nvidia"]'
          - '["bazzite", "bazzite-deck"]'
          - '["bazzite", "bazzite-deck", "aurora", "aurora-nvidia", "bluefin", "bluefin-nvidia", "cosmic", "cosmic-nvidia"]'
      image_flavor:
        type: string
        default: "Manual Build"

  workflow_call:
    inputs:
      images:
        description: "The images to build"
        required: true
        type: string
      image_flavor:
        type: string

env:
  IMAGE_REGISTRY: ghcr.io/m2giles
  IMAGE_NAME: m2os

concurrency:
  group: ${{ github.workflow }}-${{ github.ref || github.run_id }}-${{ inputs.image_flavor }}.iso
  cancel-in-progress: true

jobs:
  build-iso:
    name: Build ${{ inputs.image_flavor }} ISOs (${{ matrix.image }})
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write
    strategy:
      fail-fast: false
      matrix:
        image: ["${{ fromJson(inputs.images) }}"]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Just
        shell: bash
        run: |
          set -eoux pipefail
          JUST_VERSION=$(curl -L https://api.github.com/repos/casey/just/releases/latest | jq -r '.tag_name')
          curl -sSLO https://github.com/casey/just/releases/download/${JUST_VERSION}/just-${JUST_VERSION}-x86_64-unknown-linux-musl.tar.gz
          tar -zxvf just-${JUST_VERSION}-x86_64-unknown-linux-musl.tar.gz -C /tmp just
          sudo mv /tmp/just /usr/local/bin/just
          rm -f just-${JUST_VERSION}-x86_64-unknown-linux-musl.tar.gz
        
      - name: Check Just Syntax
        shell: bash
        run: |
          just check
      
      - name: Maximize Build Space
        uses: ublue-os/remove-unwanted-software@v7

      - name: Build ISO
        shell: bash
        run: |
          sudo just build-iso ${{ matrix.image }} 1
          echo "ISO_UPLOAD_DIR=${PWD}/${IMAGE_NAME}_build/output" >> $GITHUB_ENV

      - name: Upload ISOs and Checksum to Job Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.image }}
          path: |
            ${{ env.ISO_UPLOAD_DIR }}
          if-no-files-found: error
          retention-days: 0
          compression-level: 0
          overwrite: true
        env:
          ISO_UPLOAD_DIR: ${{ github.workspace }}/${{ env.IMAGE_NAME }}_build/ouput
