---
name: Generate SBOMs
on: # yamllint disable-line rule:truthy rule:comments
  workflow_call:
    inputs:
      image_flavor:
        type: string
concurrency:
  group: >-
    ${{ github.workflow }}-${{ github.ref
    || github.run_id }}-${{ inputs.image_flavor }}-sbom
  cancel-in-progress: true
env:
  IMAGE_REGISTRY: ghcr.io/${{ github.repository_owner }}
  IMAGE_NAME: ${{ github.event.repository.name }}
  SET_X: 1

jobs:
  get-images:
    name: Get ${{ inputs.image_flavor }} Images for SBOMs
    outputs:
      images: ${{ steps.images.outputs.images }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        # yamllint disable-line rule:line-length rule:comments
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      - name: Get Images for Build
        id: images
        uses: ./.github/actions/get-images
        with:
          image_flavor: ${{ inputs.image_flavor }}

  sbom-image:
    name: Generate ${{ matrix.image }} SBOM
    needs: ["get-images"]
    runs-on: ubuntu-latest
    continue-on-error: false
    permissions:
      contents: read
      packages: write
      id-token: write
    strategy:
      fail-fast: false
      matrix:
        image: ["${{ fromJson(needs.get-images.outputs.images) }}"]
    steps:
      - name: Checkout
        # yamllint disable-line rule:line-length rule:comments
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      - name: Maximize Build Space
        if: ${{ ! contains(matrix.image, 'ucore') }}
        # yamllint disable-line rule:line-length rule:comments
        uses: ublue-os/remove-unwanted-software@cc0becac701cf642c8f0a6613bbdaf5dc36b259e # v9

      - name: Setup Just
        # yamllint disable-line rule:line-length rule:comments
        uses: extractions/setup-just@e33e0265a09d6d736e2ee1e0eb685ef1de4669ff # v3

      - name: Download OCI-Archive
        # yamllint disable-line rule:line-length rule:comments
        uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4
        with:
          name: ${{ matrix.image }}.oci
          path: ${{ runner.temp }}

      - name: Setup
        id: setup
        run: |
          set -eou pipefail
          echo "=== FREE SPACE ==="
          df -h
          echo "=== MEMORY AND SWAP ==="
          free -h
          swapon --show
          echo "=== MAKING SWAPFILE ==="
          sudo swapoff /mnt/swapfile
          sudo rm -f /mnt/swapfile
          SWAP_FILE="/mnt/swapfile"
          SWAP_FILE_2="/swapfile"
          sudo fallocate -l 70G "$SWAP_FILE"
          sudo fallocate -l 16G "$SWAP_FILE_2"
          sudo chmod 600 "$SWAP_FILE"
          sudo chmod 600 "$SWAP_FILE_2"
          sudo mkswap "$SWAP_FILE"
          sudo mkswap "$SWAP_FILE_2"
          sudo swapon "$SWAP_FILE"
          sudo swapon "$SWAP_FILE_2"
          echo "=== FREE SPACE ==="
          df -h
          echo "=== MEMORY AND SWAP ==="
          free -h
          swapon --show

      - name: Generate SBOM
        env:
          OCI_ARCHIVE: ${{ env.IMAGE_NAME }}_${{ matrix.image }}.tar
        run: |
          just gen-sbom \
            "oci-archive:${{ runner.temp }}/${{ env.OCI_ARCHIVE }}" \
            "${{ runner.temp }}/${{ matrix.image }}.sbom.json"

      - name: Scan SBOM
        env:
          OCI_ARCHIVE: ${{ env.IMAGE_NAME }}_${{ matrix.image }}.tar
        # yamllint disable-line rule:line-length rule:comments
        uses: anchore/scan-action@2c901ab7378897c01b8efaa2d0c9bf519cc64b9e # v6
        id: scan
        with:
          sbom: ${{ runner.temp }}/${{ matrix.image }}.sbom.json
          fail-build: false

      - name: Inspect Sarif
        run: cat ${{ steps.scan.outputs.sarif }}

      - name: Upload Sarif Report
        # yamllint disable-line rule:line-length rule:comments
        uses: github/codeql-action/upload-sarif@60168efe1c415ce0f5521ea06d5c2062adbeed1b # v3
        if: >-
          contains(fromJson('["workflow_dispatch", "merge_group"]'),
          github.event_name) || github.event.schedule == '41 6 * * 0'
        with:
          sarif_file: ${{ steps.scan.outputs.sarif }}
          category: ${{ matrix.image }}

      - name: Login to GHCR, Attest and Sign
        id: attest
        if: >-
          contains(fromJson('["workflow_dispatch", "merge_group"]'),
          github.event_name) || github.event.schedule == '41 6 * * 0'
        env:
          COSIGN_EXPERIMENTAL: false
          COSIGN_PRIVATE_KEY: ${{ secrets.SIGNING_SECRET }}
          OCI_ARCHIVE: ${{ env.IMAGE_NAME }}_${{ matrix.image }}.tar
        shell: bash
        run: |
          set -eou pipefail

          just login-to-ghcr ${{ github.actor }} ${{ github.token }}

          just sbom-attest \
            "oci-archive:${{ runner.temp }}/${{ env.OCI_ARCHIVE }}" \
            ${{ runner.temp }}/${{ matrix.image }}.sbom.json

          just sbom-sign \
            "oci-archive:${{ runner.temp }}/${{ env.OCI_ARCHIVE }}" \
            ${{ runner.temp }}/${{ matrix.image }}.sbom.json

      - name: Upload SBOM
        # yamllint disable-line rule:line-length rule:comments
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4
        with:
          name: ${{ matrix.image }}.sbom
          path: |-
            ${{ runner.temp }}/${{ matrix.image }}.sbom.json*

  check:
    name: Check ${{ inputs.image_flavor }} Gen SBOM Successful
    if: ${{ !cancelled() }}
    runs-on: ubuntu-latest
    needs: [sbom-image]
    steps:
      # TODO: Figure out why aurora takes forever and can fail....
      - name: Exit on failure
        if: >-
          ${{ contains(fromJson('["failure", "skipped"]'),
          needs.build-image.result) }}
        shell: bash
        run: exit 0
      - name: Exit
        shell: bash
        run: exit 0
