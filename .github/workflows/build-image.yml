---
name: Build m2os Images
on: # yamllint disable-line rule:truthy rule:comments
  workflow_call:
    inputs:
      image_flavor:
        type: string
    secrets:
      SIGNING_SECRET:
        required: true
concurrency:
  group: >-
    ${{ github.workflow }}-${{ github.ref
    || github.run_id }}-${{ inputs.image_flavor }}-build
  cancel-in-progress: true
env:
  IMAGE_REGISTRY: ghcr.io/${{ github.repository_owner }}
  IMAGE_NAME: ${{ github.event.repository.name }}
  SET_X: 1

jobs:
  get-images:
    name: Get Images for Build
    permissions:
      actions: read
    outputs:
      images: ${{ steps.images.outputs.images }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        # yamllint disable-line rule:line-length rule:comments
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
      - name: Get Images for Build
        id: images
        uses: ./.github/actions/get-images
        with:
          image_flavor: ${{ inputs.image_flavor }}

  build-image:
    name: ${{ matrix.image }}
    needs: get-images
    runs-on: ubuntu-latest
    continue-on-error: false
    permissions:
      contents: read
      packages: write
    strategy:
      fail-fast: false
      matrix:
        image: ["${{ fromJson(needs.get-images.outputs.images) }}"]
    steps:
      - name: Checkout
        # yamllint disable-line rule:line-length rule:comments
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5

      - name: Maximize Build Space
        if: ${{ ! contains(matrix.image, 'ucore') }}
        # yamllint disable-line rule:line-length rule:comments
        uses: ublue-os/remove-unwanted-software@cc0becac701cf642c8f0a6613bbdaf5dc36b259e # v9

      - name: Setup Just
        # yamllint disable-line rule:line-length rule:comments
        uses: extractions/setup-just@e33e0265a09d6d736e2ee1e0eb685ef1de4669ff # v3

      - name: Build Image
        shell: bash
        run: |
          just build ${{ matrix.image }}

      - name: Login and Push to GHCR and Sign
        id: push
        if: >-
          contains(fromJson('["workflow_dispatch", "merge_group"]'),
          github.event_name) || github.event.schedule == '41 6 * * 0'
        env:
          COSIGN_EXPERIMENTAL: false
          COSIGN_PRIVATE_KEY: ${{ secrets.SIGNING_SECRET }}
          ACTOR: ${{ github.actor }}
          TOKEN: ${{ github.token }}
        shell: bash
        run: |
          set -eou pipefail
          just push-and-sign "${{ matrix.image }}"

      - name: Upload OCI Artifact
        # yamllint disable-line rule:line-length rule:comments
        uses: actions/upload-artifact@330a01c490aca151604b8cf639adc76d48f6c5d4 # v5
        with:
          name: ${{ matrix.image }}.oci
          # yamllint disable-line rule:line-length rule:comments
          path: ${{ env.IMAGE_NAME }}_${{ matrix.image }}.tar
          if-no-files-found: error

  check:
    name: Check Build Images Successful
    permissions:
      actions: read
    if: ${{ !cancelled() }}
    runs-on: ubuntu-latest
    needs: [build-image]
    steps:
      - name: Exit on failure
        if: >-
          ${{ contains(fromJson('["failure", "skipped"]'),
          needs.build-image.result) }}
        shell: bash
        run: exit 1
      - name: Exit
        shell: bash
        run: exit 0
