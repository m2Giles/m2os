---
name: Build m2os Images
on: # yamllint disable-line rule:truthy rule:comments
  workflow_call:
    inputs:
      image_flavor:
        type: string
concurrency:
  group: >-
    ${{ github.workflow }}-${{ github.ref
    || github.run_id }}-${{ inputs.image_flavor }}-build
  cancel-in-progress: true
env:
  IMAGE_REGISTRY: ghcr.io/${{ github.repository_owner }}
  IMAGE_NAME: ${{ github.event.repository.name }}
  SET_X: 1
jobs:
  get-images:
    name: Get ${{ inputs.image_flavor }} Images for Build
    outputs:
      images: ${{ steps.images.outputs.images }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        # yamllint disable-line rule:line-length rule:comments
        uses: actions/checkout@v4
      - name: Get Images for Build
        id: images
        uses: ./.github/actions/get-images
        with:
          image_flavor: ${{ inputs.image_flavor }}
  build-image:
    name: Build ${{ matrix.image }} Image
    needs: get-images
    runs-on: ubuntu-24.04
    continue-on-error: false
    permissions:
      contents: read
      packages: write
      id-token: write
    strategy:
      fail-fast: false
      matrix:
        image: ["${{ fromJson(needs.get-images.outputs.images) }}"]
    steps:
      - name: Checkout
        # yamllint disable-line rule:line-length rule:comments
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      - name: Maximize Build Space
        if: ${{ ! contains(matrix.image, 'ucore') }}
        # yamllint disable-line rule:line-length rule:comments
        uses: ublue-os/remove-unwanted-software@v9
      - name: Setup Just
        # yamllint disable-line rule:line-length rule:comments
        uses: extractions/setup-just@e33e0265a09d6d736e2ee1e0eb685ef1de4669ff # v3
      - name: Build Image
        shell: bash
        run: |
          which gh
          sudo $(which just) build ${{ matrix.image }}
      - name: Check Secureboot
        id: secureboot
        shell: bash
        run: |
          sudo $(which just) secureboot ${{ matrix.image }}
      - name: Rechunk Image
        shell: bash
        run: |
          sudo $(which just) rechunk ${{ matrix.image }}
      - name: Lowercase Registry
        id: registry_case
        # yamllint disable-line rule:line-length rule:comments
        uses: ASzc/change-string-case-action@v6
        with:
          string: ${{ env.IMAGE_REGISTRY }}
      - name: Login and Push to GHCR
        id: push
        if: >-
          contains(fromJson('["workflow_dispatch", "merge_group"]'),
          github.event_name) || github.event.schedule == '41 6 * * 0'
        shell: bash
        run: |
          set -eou pipefail
          just login-to-ghcr ${{ github.actor }} ${{ github.token }}
          push_args=(
            ${{ matrix.image }}
            false
            "docker://${{ steps.registry_case.outputs.lowercase }}"
          )
          just push-to-registry "${push_args[@]}"
      - name: Sign Image with Cosign
        id: sign
        if: >-
          contains(fromJson('["workflow_dispatch", "merge_group"]'),
          github.event_name) || github.event.schedule == '41 6 * * 0'
        env:
          COSIGN_EXPERIMENTAL: false
          COSIGN_PRIVATE_KEY: ${{ secrets.SIGNING_SECRET }}
        shell: bash
        run: |
          just cosign-sign "${{ steps.push.outputs.digest }}"
      - name: Upload OCI Artifact
        # yamllint disable-line rule:line-length rule:comments
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.image }}.oci
          # yamllint disable-line rule:line-length rule:comments
          path: ${{ env.IMAGE_NAME }}_${{ matrix.image }}.tar
          if-no-files-found: error

  check:
    name: Check Build ${{ inputs.image_flavor }} Images Successful
    if: ${{ !cancelled() }}
    runs-on: ubuntu-latest
    needs: [build-image]
    steps:
      - name: Exit on failure
        if: >-
          ${{ contains(fromJson('["failure", "skipped"]'),
          needs.build-image.result) }}
        shell: bash
        run: exit 1
      - name: Exit
        shell: bash
        run: exit 0
